/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package lexicalAnalysis;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int INT = 9;
  /** RegularExpression Id. */
  int LENGTH = 10;
  /** RegularExpression Id. */
  int STRING = 11;
  /** RegularExpression Id. */
  int MAIN = 12;
  /** RegularExpression Id. */
  int STATIC = 13;
  /** RegularExpression Id. */
  int PUBLIC = 14;
  /** RegularExpression Id. */
  int VOID = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int NEW = 18;
  /** RegularExpression Id. */
  int THIS = 19;
  /** RegularExpression Id. */
  int RETURN = 20;
  /** RegularExpression Id. */
  int CLASS = 21;
  /** RegularExpression Id. */
  int EXTENDS = 22;
  /** RegularExpression Id. */
  int BOOLEAN = 23;
  /** RegularExpression Id. */
  int SYSTEMOUTPRINTLN = 24;
  /** RegularExpression Id. */
  int COMMA = 25;
  /** RegularExpression Id. */
  int DOT = 26;
  /** RegularExpression Id. */
  int SEMICOLON = 27;
  /** RegularExpression Id. */
  int LPAREN = 28;
  /** RegularExpression Id. */
  int RPAREN = 29;
  /** RegularExpression Id. */
  int RBRACE = 30;
  /** RegularExpression Id. */
  int LBRACE = 31;
  /** RegularExpression Id. */
  int LBRACKET = 32;
  /** RegularExpression Id. */
  int RBRACKET = 33;
  /** RegularExpression Id. */
  int ASSIGN = 34;
  /** RegularExpression Id. */
  int NOT = 35;
  /** RegularExpression Id. */
  int PLUS = 36;
  /** RegularExpression Id. */
  int MINUS = 37;
  /** RegularExpression Id. */
  int MULTIPLY = 38;
  /** RegularExpression Id. */
  int DIVIDE = 39;
  /** RegularExpression Id. */
  int LT = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int ID = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<SINGLE_LINE_COMMENT>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"int\"",
    "\"length\"",
    "\"String\"",
    "\"main\"",
    "\"static\"",
    "\"public\"",
    "\"void\"",
    "\"true\"",
    "\"false\"",
    "\"new\"",
    "\"this\"",
    "\"return\"",
    "\"class\"",
    "\"extends\"",
    "\"boolean\"",
    "\"System.out.println\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"}\"",
    "\"{\"",
    "\"[\"",
    "\"]\"",
    "\"=\"",
    "\"!\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\"&&\"",
    "<INTEGER_LITERAL>",
    "<DIGIT>",
    "<ID>",
  };

}
